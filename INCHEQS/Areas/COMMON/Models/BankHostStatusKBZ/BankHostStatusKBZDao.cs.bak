using INCHEQS.Helpers;
using INCHEQS.Models;
using INCHEQS.Security.Account;
using INCHEQS.Resources;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using INCHEQS.DataAccessLayer;
using INCHEQS.Common;
using INCHEQS.Security;
using INCHEQS.Areas.COMMON.Models.BankHostStatusKBZ;

namespace INCHEQS.Areas.COMMON.Models.BankHostStatusKBZ
{
    public class BankHostStatusKBZDao : IBankHostStatusKBZDao
    {
        private readonly ApplicationDbContext dbContext;
        public BankHostStatusKBZDao(ApplicationDbContext dbContext)
        {
            this.dbContext = dbContext;
        }


        public List<BankHostStatusKBZModel> ListHostStatusAction()
        {
            DataTable resultTable = new DataTable();
            List<BankHostStatusKBZModel> statusActionList = new List<BankHostStatusKBZModel>();

            List<SqlParameter> sqlParameterNext = new List<SqlParameter>();
            //sqlParameterNext.Add(new SqlParameter("@fldRejectCode", id));

            resultTable = dbContext.GetRecordsAsDataTableSP("spcgHostStatusMaster", sqlParameterNext.ToArray());

            if (resultTable.Rows.Count > 0)
            {
                foreach (DataRow row in resultTable.Rows)
                {
                    BankHostStatusKBZModel action = new BankHostStatusKBZModel();
                    action.hostActionCode = row["fldBankHostStatusActionCode"].ToString();
                    action.hostActionDesc = row["fldBankHostStatusActionDesc"].ToString();
                    statusActionList.Add(action);
                }
            }
            return statusActionList;
        }

        public List<BankHostStatusKBZModel> ListHostRejectCode()
        {
            DataTable resultTable = new DataTable();
            List<BankHostStatusKBZModel> rejectCodeList = new List<BankHostStatusKBZModel>();

            List<SqlParameter> sqlParameterNext = new List<SqlParameter>();
            //sqlParameterNext.Add(new SqlParameter("@fldRejectCode", id));

            resultTable = dbContext.GetRecordsAsDataTableSP("spcgHostRejectCode", sqlParameterNext.ToArray());

            if (resultTable.Rows.Count > 0)
            {
                foreach (DataRow row in resultTable.Rows)
                {
                    BankHostStatusKBZModel rejectCode = new BankHostStatusKBZModel();
                    rejectCode.hostRejectCode = row["fldRejectCode"].ToString();
                    rejectCode.hostRejectDesc = row["fldRejectDesc"].ToString();
                    rejectCodeList.Add(rejectCode);
                }
            }
            return rejectCodeList;
        }

        public string GetHostReturnReasonDesc(string fldBankHostStatusCode)
        {
            DataTable dt = new DataTable();
            string result = "";
            string stmt = "SELECT * FROM tblBankHostStatusMaster where fldBankHostStatusCode=@fldBankHostStatusCode";
            dt = dbContext.GetRecordsAsDataTable(stmt, new[] { new SqlParameter("@fldBankHostStatusCode", fldBankHostStatusCode) });
            if (dt.Rows.Count > 0)
            {
                DataRow row = dt.Rows[0];
                result = row["fldBankHostStatusDesc"].ToString();
            }
            return result;
        }

        //public DataTable GetBankHostStatusMaster(string fldBankHostStatusCode)
        //{
        //    string stmt = "SELECT * FROM tblBankHostStatusMaster where fldBankHostStatusCode=@fldBankHostStatusCode";
        //    dt = dbContext.GetRecordsAsDataTable(stmt, new[] { new SqlParameter("@fldBankHostStatusCode", fldBankHostStatusCode) });
        //    return dt;
        //}


        public BankHostStatusKBZModel GetBankHostStatusMasterKBZ(string fldBankHostStatusCode)
        {
            DataTable resultTable = new DataTable();
            List<SqlParameter> sqlParameterNext = new List<SqlParameter>();
            BankHostStatusKBZModel bankHostStatus = new BankHostStatusKBZModel();
            sqlParameterNext.Add(new SqlParameter("@fldBankHostStatusCode", fldBankHostStatusCode));
            resultTable = dbContext.GetRecordsAsDataTableSP("spcgBankHostStatusMasterKBZ", sqlParameterNext.ToArray());
            if (resultTable.Rows.Count > 0)
            {
                DataRow row = resultTable.Rows[0];
                bankHostStatus.fldBankHostStatusCode = row["fldBankHostStatusCode"].ToString();
                bankHostStatus.fldBankHostStatusDesc = row["fldBankHostStatusDesc"].ToString();
                bankHostStatus.fldBankHostStatusAction = row["fldBankHostStatusAction"].ToString();
                bankHostStatus.fldBankCode = row["fldBankCode"].ToString();
                // bankHostStatus.fldCreateTimeStamp = DateUtils.formatDateFromSql(row["fldCreateTimeStamp"].ToString());
            }

            return bankHostStatus;
        }


        public BankHostStatusKBZModel GetBankHostStatusMasterKBZTemp(string fldBankHostStatusCode)
        {
            DataTable resultTable = new DataTable();
            List<SqlParameter> sqlParameterNext = new List<SqlParameter>();
            BankHostStatusKBZModel bankHostStatus = new BankHostStatusKBZModel();
            sqlParameterNext.Add(new SqlParameter("@fldBankHostStatusCode", fldBankHostStatusCode));
            resultTable = dbContext.GetRecordsAsDataTableSP("spcgBankHostStatusMasterKBZTemp", sqlParameterNext.ToArray());
            if (resultTable.Rows.Count > 0)
            {
                DataRow row = resultTable.Rows[0];
                bankHostStatus.fldBankHostStatusCode = row["fldBankHostStatusCode"].ToString();
                bankHostStatus.fldBankHostStatusDesc = row["fldBankHostStatusDesc"].ToString();
                bankHostStatus.fldBankHostStatusAction = row["fldBankHostStatusAction"].ToString();
                bankHostStatus.fldBankCode = row["fldBankCode"].ToString();
                // bankHostStatus.fldCreateTimeStamp = DateUtils.formatDateFromSql(row["fldCreateTimeStamp"].ToString());
            }

            return bankHostStatus;
        }

        public bool UpdateHostStatusMasterKBZ(FormCollection col, AccountModel currentUser)
        {

            int intRowAffected;
            bool blnResult = false;

            List<SqlParameter> sqlParameterNext = new List<SqlParameter>();
            sqlParameterNext.Add(new SqlParameter("@fldBankHostStatusCode", col["fldBankHostStatusCode"].ToString()));
            sqlParameterNext.Add(new SqlParameter("@fldBankHostStatusDesc", col["fldBankHostStatusDesc"].ToString()));
            sqlParameterNext.Add(new SqlParameter("@fldBankHostStatusAction", col["fldBankHostStatusAction"].ToString()));
            sqlParameterNext.Add(new SqlParameter("@fldUpdateUserId", currentUser.UserId));
            sqlParameterNext.Add(new SqlParameter("@fldUpdateTimeStamp", (object)DateTime.Now));


            intRowAffected = dbContext.ExecuteNonQuery(CommandType.StoredProcedure, "spcuBankHostStatusMasterKBZ", sqlParameterNext.ToArray());
            if (intRowAffected > 0)
            {
                blnResult = true;
            }
            else
            {
                blnResult = false;
            }

            return blnResult;
        }

        public bool AddBankHostCodeinKBZTemptoUpdate(FormCollection col, AccountModel currentUser)
        {

            int intRowAffected;
            bool blnResult = false;

            List<SqlParameter> sqlParameterNext = new List<SqlParameter>();

            sqlParameterNext.Add(new SqlParameter("@fldBankCode", CurrentUser.Account.BankCode));
            sqlParameterNext.Add(new SqlParameter("@fldBankHostStatusCode", col["fldBankHostStatusCode"].ToString()));
            sqlParameterNext.Add(new SqlParameter("@fldBankHostStatusDesc", col["fldBankHostStatusDesc"].ToString()));
            sqlParameterNext.Add(new SqlParameter("@fldBankHostStatusAction", col["fldBankHostStatusAction"].ToString()));
            sqlParameterNext.Add(new SqlParameter("@fldApproveStatus", "U"));
            sqlParameterNext.Add(new SqlParameter("@fldCreateUserId", currentUser.UserId));
            sqlParameterNext.Add(new SqlParameter("@fldCreateTimeStamp", (object)DateTime.Now));
            sqlParameterNext.Add(new SqlParameter("@fldUpdateUserId", currentUser.UserId));
            sqlParameterNext.Add(new SqlParameter("@fldUpdateTimeStamp", (object)DateTime.Now));


            intRowAffected = dbContext.ExecuteNonQuery(CommandType.StoredProcedure, "spciBankHostStatusMasterKBZUpdateTemp", sqlParameterNext.ToArray());
            if (intRowAffected > 0)
            {
                blnResult = true;
            }
            else
            {
                blnResult = false;
            }

            return blnResult;
        }

        public bool CreateBankHostStatusMasterKBZTemp(FormCollection col)
        {

            int intRowAffected;
            bool blnResult = false;

            List<SqlParameter> sqlParameterNext = new List<SqlParameter>();

            sqlParameterNext.Add(new SqlParameter("@fldBankCode", CurrentUser.Account.BankCode));
            sqlParameterNext.Add(new SqlParameter("@fldBankHostStatusCode", col["fldBankHostStatusCode"]));
            sqlParameterNext.Add(new SqlParameter("@fldBankHostStatusDesc", col["fldBankHostStatusDesc"]));
            sqlParameterNext.Add(new SqlParameter("@fldBankHostStatusAction", col["fldBankHostStatusActionCode"]));
            sqlParameterNext.Add(new SqlParameter("@fldApproveStatus", "A"));
            
            sqlParameterNext.Add(new SqlParameter("@fldCreateUserId", CurrentUser.Account.UserId));
            sqlParameterNext.Add(new SqlParameter("@fldCreateTimeStamp", DateTime.Now));
            sqlParameterNext.Add(new SqlParameter("@fldUpdateTimeStamp", DateTime.Now));
            sqlParameterNext.Add(new SqlParameter("@fldUpdateUserId", CurrentUser.Account.UserId));

            intRowAffected = dbContext.ExecuteNonQuery(CommandType.StoredProcedure, "spciBankHostStatusMasterKBZTemp", sqlParameterNext.ToArray());

            if (intRowAffected > 0)
            {
                blnResult = true;
            }
            else
            {
                blnResult = false;
            }

            return blnResult;
        }

        public bool DeleteInBankHostStatusMasterKBZ(string fldBankHostStatusCode)
        {
            int intRowAffected;
            bool blnResult = false;
            List<SqlParameter> sqlParameterNext = new List<SqlParameter>();
            sqlParameterNext.Add(new SqlParameter("@fldBankHostStatusCode", fldBankHostStatusCode));
            intRowAffected = dbContext.ExecuteNonQuery(CommandType.StoredProcedure, "spcdBankHostStatusMasterKBZ", sqlParameterNext.ToArray());
            if (intRowAffected > 0)
            {
                blnResult = true;
            }
            else
            {
                blnResult = false;
            }
            return blnResult;
        }

        public void DeleteInBankHostStatusMasterTemp(string statusId)
        {

            string stmt = "delete from tblBankHostStatusMasterTemp  where fldStatusId=@fldStatusId";
            dbContext.ExecuteNonQuery(stmt, new[] { new SqlParameter("@fldStatusId", statusId) });

        }

        public List<string> ValidateUpdate(FormCollection col)
        {
            List<string> err = new List<string>();

            if (col["fldBankHostStatusDesc"] == "")
            {
                err.Add(Locale.StatusDescCannotEmpty);
            }

            return err;
        }

        public List<string> ValidateCreate(FormCollection col)
        {
            List<string> err = new List<string>();

            if (col["fldBankHostStatusCode"] == "")
            {
                err.Add("Status code cannot be empty");
            }
            if (col["fldBankHostStatusDesc"] == "")
            {
                err.Add(Locale.StatusDescCannotEmpty);
            }
            if (CheckRecordExist(col["fldBankHostStatusCode"]))
            {
                err.Add("Status code already exist");
            }

            if (CheckRecordExistTemp(col["fldBankHostStatusCode"]))
            {
                err.Add("Status code already exist");
            }

            if (CheckRecordExistTemp(col["fldBankHostStatusCode"]))
            {
                err.Add("Status code already created to be verify");
            }


            return err;
        }

        public bool CheckRecordExist(string fldBankHostStatusCode)
        {
            string stmt = "select * from tblBankHostStatusMasterKBZ where fldBankHostStatusCode=@fldBankHostStatusCode";

            return dbContext.CheckExist(stmt, new[] { new SqlParameter("@fldBankHostStatusCode", fldBankHostStatusCode) });
        }

        public bool CheckRecordExistTemp(string fldBankHostStatusCode)
        {
            string stmt = "select * from tblBankHostStatusMasterKBZTemp where fldBankHostStatusCode=@fldBankHostStatusCode";

            return dbContext.CheckExist(stmt, new[] { new SqlParameter("@fldBankHostStatusCode", fldBankHostStatusCode) });
        }

        public bool CreateInBankHostStatusMasterKBZ(FormCollection col)
        {

            int intRowAffected;
            bool blnResult = false;

            List<SqlParameter> sqlParameterNext = new List<SqlParameter>();

            sqlParameterNext.Add(new SqlParameter("@fldBankCode", CurrentUser.Account.BankCode));
            sqlParameterNext.Add(new SqlParameter("@fldBankHostStatusCode", col["fldBankHostStatusCode"]));
            sqlParameterNext.Add(new SqlParameter("@fldBankHostStatusDesc", col["fldBankHostStatusDesc"]));
            sqlParameterNext.Add(new SqlParameter("@fldBankHostStatusAction", col["fldBankHostStatusActionCode"]));
            
            sqlParameterNext.Add(new SqlParameter("@fldCreateUserId", CurrentUser.Account.UserId));
            sqlParameterNext.Add(new SqlParameter("@fldCreateTimeStamp", DateTime.Now));
            sqlParameterNext.Add(new SqlParameter("@fldUpdateTimeStamp", DateTime.Now));
            sqlParameterNext.Add(new SqlParameter("@fldUpdateUserId", CurrentUser.Account.UserId));

            intRowAffected = dbContext.ExecuteNonQuery(CommandType.StoredProcedure, "spciBankHostStatusMasterKBZ", sqlParameterNext.ToArray());

            if (intRowAffected > 0)
            {
                blnResult = true;
            }
            else
            {
                blnResult = false;
            }

            return blnResult;
        }

        public bool AddtoBankHostStatusMasterKBZTempToDelete(string fldBankHostStatusCode)
        {

            int intRowAffected;
            bool blnResult = false;
            List<SqlParameter> sqlParameterNext = new List<SqlParameter>();

            sqlParameterNext.Add(new SqlParameter("@fldBankHostStatusCode", fldBankHostStatusCode));

            intRowAffected = dbContext.ExecuteNonQuery(CommandType.StoredProcedure, "spciBankHostCodeKBZinTemptoDelete", sqlParameterNext.ToArray());

            if (intRowAffected > 0)
            {
                blnResult = true;
            }
            else
            {
                blnResult = false;
            }

            return blnResult;
        }

        public BankHostStatusKBZModel GetHostReturnReasonModel(string fldBankHostStatusCode)
        {
            BankHostStatusKBZModel bankHostStatusCode = new BankHostStatusKBZModel();
            DataTable ds = new DataTable();
            string stmt = "select * from tblBankHostStatusMasterKBZ where fldBankHostStatusCode=@fldBankHostStatusCode";
            ds = dbContext.GetRecordsAsDataTable(stmt, new[] { new SqlParameter("@fldBankHostStatusCode", fldBankHostStatusCode) });

            if (ds.Rows.Count > 0)
            {
                DataRow row = ds.Rows[0];
                bankHostStatusCode.statusCode = row["fldBankHostStatusCode"].ToString();
                bankHostStatusCode.statusDesc = row["fldBankHostStatusDesc"].ToString();
            }
            return bankHostStatusCode;
        }

        public bool CheckBankHostCodeDataTempKBZ(string fldBankHostStatusCode)
        {
            BankHostStatusKBZModel bankCode = new BankHostStatusKBZModel();
            bool Flag = false;
            DataTable resultTable = new DataTable();
            List<SqlParameter> sqlParameterNext = new List<SqlParameter>();
            sqlParameterNext.Add(new SqlParameter("@fldBankHostStatusCode", fldBankHostStatusCode));
            resultTable = dbContext.GetRecordsAsDataTableSP("spcgBankHostCodeTempDataKBZ", sqlParameterNext.ToArray());

            if (resultTable.Rows.Count > 0)
            {
                Flag = true;
            }

            return Flag;

        }

        public bool CreateBankHostStatusCodeinMainKBZ (string fldBankHostStatusCode)
        {
            int intRowAffected;
            bool blnResult = false;
            List<SqlParameter> sqlParameterNext = new List<SqlParameter>();
            sqlParameterNext.Add(new SqlParameter("@fldBankHostStatusCode", fldBankHostStatusCode));
            intRowAffected = dbContext.ExecuteNonQuery(CommandType.StoredProcedure, "spciBankHostStatusCodeKBZinMain", sqlParameterNext.ToArray());
            if (intRowAffected > 0)
            {
                blnResult = true;
            }
            else
            {
                blnResult = false;
            }
            return blnResult;
        }


        public BankHostStatusKBZModel GetBankHostStatusCodeData(string fldBankHostStatusCode)
        {
            BankHostStatusKBZModel bankHostCode = new BankHostStatusKBZModel();
            DataTable resultTable = new DataTable();
            List<SqlParameter> sqlParameterNext = new List<SqlParameter>();
            sqlParameterNext.Add(new SqlParameter("@fldBankHostStatusCode", @fldBankHostStatusCode));
            resultTable = dbContext.GetRecordsAsDataTableSP("spcgBankHostCodeKBZDatabyId", sqlParameterNext.ToArray());

            if (resultTable.Rows.Count > 0)
            {
                DataRow row = resultTable.Rows[0];

                bankHostCode.fldBankHostStatusCode = row["fldBankHostStatusCode"].ToString();
                bankHostCode.fldBankHostStatusDesc = row["fldBankHostStatusDesc"].ToString();
                bankHostCode.fldBankHostStatusAction = row["fldBankHostStatusAction"].ToString();
                //bankHostCode.fldCreateUserId = row["fldCreateUserId"].ToString();
                //bankHostCode.fldCreateTimeStamp = DateUtils.formatDateFromSql(row["fldCreateTimeStamp"].ToString());
                //bankHostCode.fldUpdateUserId = row["fldUpdateUserId"].ToString();
                //bankHostCode.fldUpdateTimeStamp = row["fldUpdateTimeStamp"].ToString();
                //bankHostCode.fldIdForDelete = row["fldIdForDelete"].ToString();
                bankHostCode.ReportTitle = row["ReportTitle"].ToString();

            }

            return bankHostCode;

        }

        public bool DeleteInBankHostStatusCodeKBZ(string fldBankHostStatusCode)
        {
            int intRowAffected;
            bool blnResult = false;
            List<SqlParameter> sqlParameterNext = new List<SqlParameter>();
            sqlParameterNext.Add(new SqlParameter("@fldBankHostStatusCode", fldBankHostStatusCode));
            intRowAffected = dbContext.ExecuteNonQuery(CommandType.StoredProcedure, "spcdBankHostStatusCodeKBZ", sqlParameterNext.ToArray());
            if (intRowAffected > 0)
            {
                blnResult = true;
            }
            else
            {
                blnResult = false;
            }
            return blnResult;
        }


        public bool UpdateBankHostStatusCodeToMainById(string fldBankHostStatusCode)
        {
            BankHostStatusKBZModel bankHostStatusCode = new BankHostStatusKBZModel();
            bool Flag = false;
            DataTable resultTable = new DataTable();
            List<SqlParameter> sqlParameterNext = new List<SqlParameter>();
            sqlParameterNext.Add(new SqlParameter("@fldBankHostStatusCode", fldBankHostStatusCode));
            resultTable = dbContext.GetRecordsAsDataTableSP("spcuBankHostStatusCodeKBZToMainById", sqlParameterNext.ToArray());

            if (resultTable.Rows.Count > 0)
            {
                Flag = true;
            }
            return Flag;
        }

        public bool DeleteBankHostStatusCodeinTempKBZ(string fldBankHostStatusCode)
        {
            int intRowAffected;
            bool blnResult = false;
            List<SqlParameter> sqlParameterNext = new List<SqlParameter>();
            sqlParameterNext.Add(new SqlParameter("@fldBankHostStatusCode", fldBankHostStatusCode));
            intRowAffected = dbContext.ExecuteNonQuery(CommandType.StoredProcedure, "spcdBankHostStatusCodeKBZinTemp", sqlParameterNext.ToArray());
            if (intRowAffected > 0)
            {
                blnResult = true;
            }
            else
            {
                blnResult = false;
            }
            return blnResult;
        }



    }
}