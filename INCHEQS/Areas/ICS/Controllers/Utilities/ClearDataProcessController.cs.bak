using INCHEQS.Security.AuditTrail;
using INCHEQS.Processes.DataProcess;
using INCHEQS.TaskAssignment;
using INCHEQS.Resources;
using INCHEQS.Security;
using System.Web.Mvc;
using INCHEQS.Models.SearchPageConfig;
using System.Data.SqlClient;
using System.Collections.Generic;
using System.Linq;


namespace INCHEQS.Areas.ICS.Controllers.Utilities {
        
    public class ClearDataProcessController : BaseController {
        
        private readonly IDataProcessDao cleardataProcess;
        private readonly IAuditTrailDao auditTrailDao;
        private IPageConfigDao pageConfigDao;

        public ClearDataProcessController(IDataProcessDao cleardataProcess, IPageConfigDao pageConfigDao, IAuditTrailDao auditTrailDao) {
            this.cleardataProcess = cleardataProcess;
            this.auditTrailDao = auditTrailDao;
            this.pageConfigDao = pageConfigDao;
        }
        // GET: ClearDataProcess
        [CustomAuthorize(TaskIds = TaskIds.ClearDataProcess.INDEX)]
        [GenericFilter(AllowHttpGet = true)]
        public ActionResult Index() {
            
            ViewBag.SearchPage = pageConfigDao.GetSearchFormModelFromConfig(CurrentUser.Account, new PageSqlConfig(TaskIds.ClearDataProcess.INDEX));
            return View();
        }

        [CustomAuthorize(TaskIds = TaskIds.ClearDataProcess.INDEX)]
        [GenericFilter(AllowHttpGet = true)]
        public virtual ActionResult SearchResultPage(FormCollection collection)
        {
            string x = collection["fldProcessDate"]; // 12/Aug/2020
            ViewBag.SearchResult = pageConfigDao.getResultListFromDatabaseView(new PageSqlConfig(TaskIds.ClearDataProcess.INDEX, "View_ClearDataProcessICS", null, "fldBankCode=@fldBankCode", new[] {
                new SqlParameter("@fldBankCode",CurrentUser.Account.BankCode )
            }), collection);

            return View();
        }

        [CustomAuthorize(TaskIds = TaskIds.ClearDataProcess.DELETE)]
        [HttpPost()]
        public ActionResult Delete(FormCollection collection) {
            /*
            if (collection != null & collection["chkDelete"] != null) {
                cleardataProcess.DeleteProcessUsingCheckbox(collection["chkDelete"]);
                TempData["Notice"] = Locale.SuccessfullyDeleted;
                auditTrailDao.Log("Clear Data Process - Primary Id: "+collection["chkDelete"], CurrentUser.Account);
            } else
                TempData["Warning"] = Locale.Nodatawasselected;
           
            return RedirectToAction("Index");
            */

            if (collection != null & collection["deleteBox"] != null)
            {
                List<string> arrResults = collection["deleteBox"].Split(',').ToList();
                foreach (string arrResult in arrResults)
                {
                    cleardataProcess.DeleteProcessUsingCheckbox(arrResult);
                }
                TempData["Notice"] = Locale.SuccessfullyDeleted;
                auditTrailDao.Log("Clear Data Process - Primary Id: " + collection["chkDelete"], CurrentUser.Account);
            }
            else
                TempData["Warning"] = Locale.Nodatawasselected;

            return RedirectToAction("Index");
        }

    }
}