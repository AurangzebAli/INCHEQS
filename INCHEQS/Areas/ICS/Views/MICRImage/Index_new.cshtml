@using INCHEQS.Resources
@using INCHEQS.TaskAssignment;
@using (Html.BeginForm(null, null, FormMethod.Post, new { action = @Url.Action("SearchResultPage"), @Class = "form-inline secure-form", id = "searchForm" }))

{
    @Html.AntiForgeryToken();

    <div id="CenterPostedItemsDetailModal" class="modal" role="dialog">
        <div class="modal-dialog modal-lg">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Detail</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12" id="CenterPostedItemsDetailModal_body">
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">@Locale.btnClose </button>
                </div>
            </div>

        </div>
    </div>


    @*<h4>Normal User Submission</h4>*@
    <h4>@ViewBag.SearchPage.PageTitle</h4>
    <div class="row">
        <hr />

        @Html.Partial("SearchPage/_GenericFieldsForm")

    </div>

    <div>
        <button type="submit" class="btn btn-default init-search search-refresh" data-action="@Url.Action("SearchResultPage")">@Locale.Search</button>


    </div>



    <br>
    <style>
        body {
            font-family: Arial;
            margin-top: 0px;
            margin-bottom: 0px;
        }

        /* Style the tab */
        .tab {
            overflow: hidden;
            border: 1px solid #ccc;
            background-color: #f1f1f1;
            height: 40px;
            margin-top: 0px;
            margin-bottom: 0px;
        }

            /* Style the buttons inside the tab */
            .tab button {
                background-color: inherit;
                float: left;
                border: none;
                outline: none;
                cursor: pointer;
                padding: 14px 16px;
                transition: 0.3s;
                font-size: 14px;
            }

                /* Change background color of buttons on hover */
                .tab button:hover {
                    background-color: #ddd;
                }

                /* Create an active/current tablink class */
                .tab button.active {
                    background-color: #737373;
                }

        /* Style the tab content */
        .tabcontent {
            display: none;
            padding: 6px 12px;
            border: 0px solid #ccc;
            border-top: none;
            margin-top: 0px;
            margin-bottom: 0px;
        }

        #hide input[type=file] {
            display: none;
            margin: 10px;
        }

            #hide input[type=file] + label {
                display: inline-block;
                margin: 20px;
                padding: 4px 32px;
                background-color: #FFFFFF;
                border: solid 1px #666F77;
                border-radius: 6px;
                color: #666F77;
            }

            #hide input[type=file]:active + label {
                background-image: none;
                background-color: #2D6C7A;
                color: #FFFFFF;
            }


        .overlay {
            position: absolute;
            display: none;
            background-color: rgb(128,128,128,0.5);
            top: 0;
            left: 0;
            bottom: 0;
            right: 0;
        }

        .popup {
            position: fixed;
            z-index: 99;
            vertical-align: central;
            display: none;
            margin-left: 15%;
            margin-bottom: 30%;
        }

        .percentage {
            position: fixed;
            vertical-align: central;
            margin-left: 20%;
             
        }


    </style>

    <script>
        // debugger;
        function openCity(evt, actionName) {
            var i, tabcontent, tablinks;
            tabcontent = document.getElementsByClassName("tabcontent");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }
            tablinks = document.getElementsByClassName("tablinks");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace(" active", "");
            }
            document.getElementById(actionName).style.display = "block";
            evt.currentTarget.className += " active";

            document.getElementById("checkBox").checked = true;
            document.getElementById("checkBox").value = actionName;
        }
        document.getElementById("defaultOpen").click();




        /*** Ali */
        //function popup() {
        //    $(".overlay,.popup").fadeIn();
        //    StartProgrssBar();
        //    CallApi();

        //}

        ////progress bar function
        //function StartProgrssBar() {
        //    var currentDate = new Date();
        //    var second = currentDate.getSeconds();
        //    if (second < 10) {
        //        second = "0" + second;
        //    }

        //    $('.progress-bar').css('width', second + '%');

        //    setTimeout(function () { StartProgrssBar(), 10000 });
        //}

        ////close Progress Bar
        //function CloseProgressBar() {
        //    $('#Fade_area').removeAttr("style");
        //    $('#mymodal').removeAttr("style");
        //}
        //function CallApi() {
        //    $.ajax({
        //        type: "GET",
        //        contentType: "application/json",
        //        success: function () {
        //            setTimeout(function () { CloseProgressBar() }, 10000)
        //        },
        //        error: function () {
        //            setTimeout(function () { CloseProgressBar() }, 10000)
        //        }


        //    });

        //}


    </script>

    <div>

        @*<div>
                <span style="border-bottom: 1px solid;" class="h5 bold">GWC Folder Path Detail:</span>
                <br />
                <br />

                <span class="h5">@ViewBag.FolderPathFrom</span>

                <br />
                <br />
                <span style="border-bottom: 1px solid;" class="h5 bold">Local Folder Path Detail:</span>
                <br />
                <br />

                <span class="h5">@ViewBag.FolderPathTo</span>
                <br />
                <br />
            </div>*@

        <div id="Fade_area" class="overlay"></div>
        <div id="mymodal" class="popup">
            @Html.Partial("~/Areas/ICS/Views/MICRImage/Modal/_Popup.cshtml")
        </div>


        <div class="tab">
            <table>
                <tr>
                    <td>
                        <input hidden="hidden" type="checkbox" class="chk" id="checkBox" name="Type" value="M" />
                    </td>
                    <td>
                        <button class="tablinks" id="defaultOpen" onclick="openCity(event, 'Submitted')">File(s) Download Import & Status</button>
                    </td>
                    <td>
                        <button class="tablinks" id="2" onclick="openCity(event, 'Summary')">File(s) Download Import & Status Summary</button>
                    </td>
                </tr>
            </table>
        </div>
    </div>


    <div id="Summary">

    </div>
    <div id="Submitted">

    </div>
    @*<div id="Ready">

        </div>*@




    <div id="resultContainer" class="resultContainerRefresh" style="margin-bottom:0px"></div>
    <button class="btn btn-default modal-submit" data-action="@Url.Action("GWCListing")" data-title="File(s) Available List">File(s) Available List</button>
    if (ViewBag.Button.ToString().Trim() != "hidden")
    {

        <button data-action="@Url.Action("/Import")" Class="btn btn-default normal-submit-confirm-action-button-refresh generate-download-import">Download & Import</button>
    }
    @*@Html.TextBox("file", "", new { type = "file" , multiple = "multiple",id="choose-file",value = "Browse", Class = "btn btn-default" })*@
    @*@Html.TextBox("file", "", new { type = "file" , multiple = "multiple",id="choose-file",value = "Browse", Class = "btn btn-default" })*@
    @*<button  data-action="@Url.Action("/Browse")" Class="btn btn-default normal-submit-confirm-action-button-browse generate-download-import">Browse</button>*@



}


<div id="dataProcessContainer" data-systemtype="Import" data-processname="Download & Import Inward Return File"></div>
@*<input id="inwardProcessType" value="ICL" type="hidden">*@

@Scripts.Render("~/bundles/SearchPage")
@Scripts.Render("~/bundles/DataProcessRefreshPage")
