@using INCHEQS.Common

<div style="overflow-y:auto;max-height:350px;margin-bottom:10px">
    <table class="table table-striped table-hover table-bordered">
        <thead style="font-weight:bold">
            <tr>
                <td>Total Item</td>
                <td>Total Amount</td>
                <td>Total Item In Pending Verification</td>
                <td>Total Amount Pending</td>
                <td>Total Item (@ViewBag.fldPercentage %)</td>
                <td>Total Amount (@ViewBag.fldPercentage %)</td>
                <td>Minimum Amount</td>
                <td>Maximum Amount</td>
            </tr>
            <tr>
                <td colspan="8">Calculation Summary</td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@ViewBag.TotalRecModel.fldTotInward</td>
                <td>@StringUtils.FormatCurrency(ViewBag.TotalRecModel.fldTotAmount)</td>
                <td>@ViewBag.TotalPendingRecModel.fldTotPending</td>
                <td>@StringUtils.FormatCurrency(ViewBag.TotalPendingRecModel.fldTotAmountPending)</td>
                <td>@ViewBag.Model.Count</td>
                <td>@StringUtils.FormatCurrency(ViewBag.totalfldAmount)</td>
                <td>@StringUtils.FormatCurrency(ViewBag.fldMinAmount)</td>
                <td>@StringUtils.FormatCurrency(ViewBag.fldMaxAmount)</td>
            </tr>
        </tbody>
    </table>
    <div style="font-weight:bold">
        <p>TRUNCATION AMOUNT MECHANISM</p>
        <p>Inward Clearing Dated: @ViewBag.fldClearDate</p>
        <p>Total Inward Clearing (Pending): @ViewBag.TotalPendingRecModel.fldTotPending</p>
    </div>
    <table class="table table-striped table-hover table-bordered">
        <thead style="font-weight:bold">
            <tr>
                <td>Amount Range</td>
                <td>%</td>
                <td>Items</td>
            </tr>
        </thead>
        <tbody>
            @{
                var totPercent = 0.00;
                var fldAmount = 0;
                var count = 0;
                var totalInwardCount = ViewBag.TotalRecModel.fldTotInward;
                var fldStatisticRange = Int64.Parse(ViewBag.fldStatisticRange + "00");
                var fldStatisticRangeNew = fldStatisticRange;
                var maxAmount = Int64.Parse(ViewBag.fldMaxAmount);
            }

            @if (maxAmount > fldStatisticRangeNew)
            {
                for (int i = 0; i < @ViewBag.Model.Count; i++)
                {
                    if (Int64.Parse(ViewBag.Model[i].fldAmount) <= fldStatisticRangeNew)
                    {
                        count = count + 1;
                        if (i == @ViewBag.Model.Count - 1)
                        {
                            totPercent = Math.Round((count / Convert.ToDouble(totalInwardCount)) * 100, 2);
                            <tr>
                                <td>For cheques RM <span style="color:red">@fldStatisticRangeNew.ToString().Substring(0,fldStatisticRangeNew.ToString().Length - 2)</span> and below</td>
                                <td>@totPercent</td>
                                <td>@i</td>
                            </tr>
                        }
                    }
                    else
                    {
                        if (ViewBag.TotalPendingRecModel.fldTotPending != 0)
                        {
                            totPercent = Math.Round((count / Convert.ToDouble(totalInwardCount)) * 100, 2);
                        }
                        else
                        {
                            totPercent = 0;
                        }
                        <tr>
                            <td>For cheques RM <span style="color:red">@fldStatisticRangeNew.ToString().Substring(0, fldStatisticRangeNew.ToString().Length - 2)</span> and below</td>
                            <td>@totPercent</td>
                            <td>@count</td>
                        </tr>
                        fldStatisticRangeNew = fldStatisticRangeNew + fldStatisticRange;
                        count = count + 1;
                    }
                }
            }
            else
            {
                if (ViewBag.TotalPendingRecModel.fldTotPending != 0)
                {
                    totPercent = Math.Round((ViewBag.Model.Count / Convert.ToDouble(totalInwardCount)) * 100, 2);
                }
                else
                {
                    totPercent = 0;
                }
                <tr>
                    <td>For cheques RM <span style="color:red">@fldStatisticRangeNew.ToString().Substring(0, fldStatisticRangeNew.ToString().Length - 2)</span> and below</td>
                    <td>@totPercent</td>
                    <td>@ViewBag.Model.Count</td>
                </tr>
            }
        </tbody>
    </table>
</div>
<style>
    p {
        margin: 0 0 1px;
    }
</style>
