@using INCHEQS.Resources


&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<style>
    .cheqeAmmountEntrybox {
        /*width: 100%;*/
        /*margin: auto;*/
        position: absolute;
        /*left: 100px;
        right: 100px;*/
        /*top:500px;*/
        /*bottom: 500px;*/
    }

    .BoxChequeAmountEntry {
        /*width: 100px;
        height:100px;*/
        /*margin: auto;
        width: 100%;*/
        /*margin: auto;*/
        /*position: absolute;*/
        left: -300px;
        right: 0px;
        top:-20px;
        /*bottom: 500px;*/
    }


    /*.BoxTransparentdiv {
        display: inline-block;
        width: 300px;
        height: 500px;
    }*/
</style>

<div class="ChequAmountEntry">
    <div id="BoxTransparentdiv" class="BoxChequeAmountEntry" style="width:220px">
        <!--Include a header DIV with the same name as the draggable DIV, followed by "header":-->

        <div id="BoxChequeAmountEntryheader" class="titlebar">
            <span class="title">Amount Entry</span>
        </div>
        <div hidden>

        </div>
        <div class="BoxChequeAmountEntry" >
            <div>
                &nbsp;
            </div>
            <div>
                &nbsp;
            </div>
            <div class="container">
                &nbsp;
            </div>
        </div>
        @*<script>
            $(function () {
                var setcursor = document.getElementById('atm');
                setcursor.focus();
                var input = "";
                //holds current input as a string
                $("#atm").keydown(function (e) {
                    //handle backspace key
                        if (e.keyCode == 8 && input.length > 0/* && input.length <= 20*/) {

                        input = input.slice(0, input.length - 1); //remove last digit
                        $(this).val(formatNumber(input));

                    }
                    else {
                        var key = getKeyValue(e.keyCode);

                        if (key) {
                                if (input.length < 20) {
                            input += key; //add actual digit to the input string
                            $(this).val(formatNumber(input)); //format input string and set the input box value to it
                                }
                        }
                    }

                    return false;

                });
                function getKeyValue(keyCode) {

                    if (keyCode > 57) { //also check for numpad keys

                        keyCode -= 48;

                    }
                    if (keyCode >= 48 && keyCode <= 57) {
                        return String.fromCharCode(keyCode);

                    }

                }
                function formatNumber(input) {
                    if (isNaN(parseFloat(input))) {

                        return "0.00"; //if the input is invalid just set the value to 0.00
                    }
                    var num = parseFloat(input);
                    return (num / 100).toFixed(2); //move the decimal up to places return a X.00 format

                }
            });
        </script>

        <script>
            function addCommas(num) {
                return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            }
        </script>*@

        @*<script>
            $('#currencyButton').click(function () {
                $('#currencyField').formatCurrency();
                $('#currencyField').formatCurrency('.currencyLabel');
            });
            </script>*@

        <script>
            $(function () {


                var setcursor = document.getElementById('atm');

                if (setcursor.value != "0") {
                    setcursor.value = setcursor.value

                } else {
                    setcursor.value = "";

                }
                setcursor.focus();


            });

        </script>
        <script>
            //function addDecimal() { //put .00 decimal places and add commas

            //    var num = document.getElementById("atm").value;

            //    var x = num.toString().replace(/(\d+),(?=\d{3}(\D|$))/g, "$1");
            //    x = parseFloat(x);
               
            //    if (isNaN(x)) {
            //        //return "0.00"; //if the input is invalid just set the value to 0.00
            //        return ""; //if the input is invalid just set the value to 0.00
            //    } else {
            //        var y = x.toFixed(2);
            //    }
            //    document.getElementById("atm").value = y.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            //}
           
            //function addDecimal() { //put .00 decimal places and add commas
            //    var num = document.getElementById("atm").value;
            //   // var  parseFloat(num.toString().split(".")[0]);
            //    var x = num.toString().replace(/(\d+),(?=\d{3}(\D|$))/g, "$1");
            //   // alert(x.length)
            //    if (x.length > 15) {
            //        var a = x.substring(0, 15);
            //        var b = x.substring(15);
            //       // alert(a);
            //      //  alert(b);
            //        a = parseFloat(a);
            //        b = parseFloat(b).toFixed(2);
            //     //   alert(a);
            //      //  alert(b);
            //        if (isNaN(x)) {
            //            //return "0.00"; //if the input is invalid just set the value to 0.00
            //            return ""; //if the input is invalid just set the value to 0.00
            //        } else {
            //            var y = a + b;
            //     //       alert(y);
            //        }
            //        document.getElementById("atm").value = y.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            //    }
            //    else {
            //        x = parseFloat(x);
            //        if (isNaN(x)) {
            //            //return "0.00"; //if the input is invalid just set the value to 0.00
            //            return ""; //if the input is invalid just set the value to 0.00
            //        } else {
            //            var y = x.toFixed(2);
            //        }
            //        document.getElementById("atm").value = y.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            //    }
            //}
            //function checkLength() {
            //    var num = document.getElementById("atm").value;
            //    var maxlen = 0;
            //    if (num.indexOf(".") > -1) {
            //        maxlen = 16;
            //    }
            //    else {
            //        maxlen = 13;
            //    }
            //    //all keys including return.
            //    var maxLength = maxlen;
            //    var length = num.length;
            //    if (length >= maxLength) {
            //        event.preventDefault();
            //    }
            //}
            function getKeyValue(keyCode) {
                if (keyCode > 57) { //also check for numpad keys
                    keyCode -= 48;
                }
                if (keyCode >= 48 && keyCode <= 57) {
                    return String.fromCharCode(keyCode);
                }
            }
            $(function () {
                var setcursor = document.getElementById('atm');
                setcursor.focus();
                var input = "";
                //holds current input as a string
                $("#atm").keydown(function (e) {
                    var num = document.getElementById("atm").value;
                    var maxlen = 0;
                    if (num.indexOf(".") > -1) {
                        //debugger
                        maxlen = 20;
                    }
                    else {
                        //debugger
                        maxlen = 13;
                    }
                    //all keys including return.
                    //handle backspace key
                    if (e.keyCode == 8 && num.length > 0 /*&& input.length <= maxLength*/) {
                        input = num.slice(0, num.length - 1); //remove last digit
                        $(this).val(input);
                    }
                    else {
                        var key = getKeyValue(e.keyCode);
                        if (key) {
                            if (input.length < maxlen) {
                                input += key; //add actual digit to the input string
                                $(this).val(input); //format input string and set the input box value to it
                            }
                        }
                    }
                    return false;
                });
            });
            function addDecimal() { //put .00 decimal places and add commas

                var num = document.getElementById("atm").value;
                
                if (num.indexOf(".") > -1) {
                    document.getElementById("atm").value = num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                }
                else {
                var x = num.toString().replace(/(\d+),(?=\d{3}(\D|$))/g, "$1");
               // alert(x.length)
                if (x.length > 15) {
                    var a = x.substring(0, 15);
                    var b = x.substring(15);
                   // alert(a);
                  //  alert(b);

                    a = parseFloat(a);
                    b = parseFloat(b).toFixed(2);
                 //   alert(a);
                  //  alert(b);
                    if (isNaN(x)) {
                        //return "0.00"; //if the input is invalid just set the value to 0.00
                        return ""; //if the input is invalid just set the value to 0.00
                    } else {
                        var y = a + b;
                 //       alert(y);
                    }
                    document.getElementById("atm").value = y.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                }
                else {
                        //if (num.indexOf(".") > -1) {
                        //}
                        //else {
                    x = parseFloat(x);

                    if (isNaN(x)) {
                        //return "0.00"; //if the input is invalid just set the value to 0.00
                        return ""; //if the input is invalid just set the value to 0.00
                    } else {
                        var y = x.toFixed(2);
                    }
                    document.getElementById("atm").value = y.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        //}
                }
                
            }


           

            }

            function isNumber(evt) { //number only
                evt = (evt) ? evt : window.event;
                var charCode = (evt.which) ? evt.which : evt.keyCode;
                if (charCode > 31 && (charCode < 48 || charCode > 57)) {
                    return false;
                }
                   // return true;
                var num = evt.val();
            }
        </script>

        @if (Convert.ToDecimal(@ViewBag.OutwardItemViewModel.getField("fldamount")).ToString() == "0.00")
        {
        <div>
                <input id="atm" class="form-control  number-only" @*type="number"*@ @*lang="en-150"*@
                   name="txtChequeAmount"
                   style="font-size:medium;text-align:right;background-color: yellow;
			border: 1px;"
                   autofocus
                   @*data-type="currency" pattern="^\$\d{1,3}(,\d{3})*(\.\d+)?$"*@
                       type="text" 
                       @*value=@Html.Raw(String.Format("{0:N}",Convert.ToDecimal(@ViewBag.OutwardItemViewModel.getField("fldamount")))) onkeyup="this.value=addCommas(this.value);" />*@
                       @*value=@Html.Raw(String.Format("{0}",Convert.ToDecimal(@ViewBag.OutwardItemViewModel.getField("fldamount")))) onblur="addDecimal()" onkeypress="return isNumber(event)" />*@
                       value="" onblur="addDecimal()"  />


        </div>
        }
        else
        {
            <div>
                <input id="atm" class="form-control  number-only" @*type="number"*@ @*lang="en-150"*@
                       name="txtChequeAmount"
                       style="font-size:medium;text-align:right;background-color: yellow;
			       border: 1px;"
                       autofocus
                       @*data-type="currency" pattern="^\$\d{1,3}(,\d{3})*(\.\d+)?$"*@
                       type="text"
                       @*value=@Html.Raw(String.Format("{0:N}",Convert.ToDecimal(@ViewBag.OutwardItemViewModel.getField("fldamount")))) onkeyup="this.value=addCommas(this.value);" />*@
                       @*value=@Html.Raw(String.Format("{0}",Convert.ToDecimal(@ViewBag.OutwardItemViewModel.getField("fldamount")))) onblur="addDecimal()" onkeypress="return isNumber(event)" />*@
                       value=@Html.Raw(String.Format("{0}",Convert.ToDecimal(@ViewBag.OutwardItemViewModel.getField("fldamount")))) onblur="addDecimal()"  @*onkeypress="return isNumber(event)"*@ />


            </div>
        }




    </div>
</div>
@*@Html.Partial("Common/_TransactionCodeSelectList", (string)ViewBag.OutwardItemViewModel.getField("fldTCCode"))*@
@*<input type="hidden" name="new_fldTCCode" value="@ViewBag.OutwardItemViewModel.getField("fldTCCode")" readonly="readonly" />*@


@if (ViewHelper.HasUrlAccess(CurrentUser.Account, ViewBag.AllowedAction, "ChequeAmountConfirm"))
{

    if (ViewBag.OutwardItemViewModel.lockedCheque == true)
    {
        <input disabled type="text" class="cheque-input new_fldcheckdigit number-only @(ViewBag.OutwardItemViewModel.getField("fldoricheckdigit") == ""  ? "" : "txtRed")" name="new_fldcheckdigit" value="@ViewBag.OutwardItemViewModel.getField("fldcheckdigit")" maxlength="2" style="width: 45px; margin-left:14px; margin-right:auto;" />
        @*<input readonly type="text" class="cheque-input new_fldserial number-only @(ViewBag.OutwardItemViewModel.getField("fldoriserial") == "" ? "" : "txtRed")" name="new_fldserial" value="@ViewBag.OutwardItemViewModel.getField("fldserial")" maxlength="6" style="width: 100px; margin:auto;"/>*@
        @*<input readonly type="text" class="cheque-input new_fldbankcode number-only @(ViewBag.OutwardItemViewModel.getField("fldoribankcode") == ""  ? "" : "txtRed")" name="new_fldbankcode" value="@ViewBag.OutwardItemViewModel.getField("fldbankcode")" maxlength="2"style="width: 45px; margin:auto;"/>*@
        @*<input readonly type="text" class="cheque-input new_fldbranchcode number-only @(ViewBag.OutwardItemViewModel.getField("fldoribranchcode") == ""  ? "" : "txtRed")" name="new_fldbranchcode" value="@ViewBag.OutwardItemViewModel.getField("fldbranchcode")" maxlength="3"style="width: 60px; margin:auto;"/>*@
        <input disabled type="text" class="cheque-input new_fldtype number-only @(ViewBag.OutwardItemViewModel.getField("fldoritype") == ""  ? "" : "txtRed")" name="new_fldtype" value="@ViewBag.OutwardItemViewModel.getField("fldtype")" maxlength="1" style="width: 30px; margin:auto; text-align:center;" />
        <input disabled type="text" class="cheque-input new_fldstatecode number-only @(ViewBag.OutwardItemViewModel.getField("fldoristatecode") == ""  ? "" : "txtRed")" name="new_fldstatecode" value="@ViewBag.OutwardItemViewModel.getField("fldstatecode")" maxlength="1" style="width: 30px; margin:auto;" />
        @*<input readonly type="text" class="cheque-input new_fldissueraccno number-only @(ViewBag.OutwardItemViewModel.getField("fldoriissueraccno") == ""  ? "" : "txtRed")" name="new_fldissueraccNo" value="@ViewBag.OutwardItemViewModel.getField("fldissueraccno")" maxlength="10" style="width: 150px; margin:auto;" />*@
        <input hidden type="text" class="cheque-input new_fldtccode number-only @(ViewBag.OutwardItemViewModel.getField("fldoritccode") == ""  ? "" : "txtRed")" name="new_fldtccode" value="@ViewBag.OutwardItemViewModel.getField("fldtccode")" maxlength="2" style="width: 45px; margin-left:auto; margin-right:200px;" />

        <input hidden disabled type="text" class="cheque-input new_fldlocation number-only @(ViewBag.OutwardItemViewModel.getField("fldorilocation") == ""  ? "" : "txtRed")" name="new_fldlocation" value="@ViewBag.OutwardItemViewModel.getField("fldlocation")" maxlength="1" style="width: 30px; margin:auto; text-align:center;" />
        <input disabled type="text" class="cheque-input new_fldbankcode number-only @(ViewBag.OutwardItemViewModel.getField("fldoribankcode") == ""  ? "" : "txtRed")" name="new_fldbankcode" value="@ViewBag.OutwardItemViewModel.getField("fldbankcode")" maxlength="3" style="width: 40px; margin:auto; text-align:center;" />
        <input disabled type="text" class="cheque-input new_fldbranchcode number-only @(ViewBag.OutwardItemViewModel.getField("fldoribranchcode") == ""  ? "" : "txtRed")" name="new_fldbranchcode" value="@ViewBag.OutwardItemViewModel.getField("fldbranchcode")" maxlength="4" style="width: 50px; margin:auto; text-align:center;" />
        <input disabled type="text" class="cheque-input new_fldserial number-only @(ViewBag.OutwardItemViewModel.getField("fldoriserial") == "" ? "" : "txtRed")" name="new_fldserial" value="@ViewBag.OutwardItemViewModel.getField("fldserial")" maxlength="6" style="width: 70px; margin:auto; text-align:center;" />
        <input disabled type="text" class="cheque-input new_fldissueraccno number-only @(ViewBag.OutwardItemViewModel.getField("fldoriissueraccno") == ""  ? "" : "txtRed")" name="new_fldissueraccNo" value="@ViewBag.OutwardItemViewModel.getField("fldissueraccno")" maxlength="20" style="width: 200px; margin:auto; text-align:center;" />
        <input readonly disabled type="text" class="cheque-input new_fldamount number-only @(ViewBag.OutwardItemViewModel.getField("fldamount") == ""  ? "" : "txtRed")" name="new_fldamount" @*value="@ViewBag.OutwardItemViewModel.getField("fldamount")"*@ value=@Html.Raw(String.Format("{0:N}",Convert.ToDecimal(@ViewBag.OutwardItemViewModel.getField("fldamount")))) maxlength="20" style="width: 150px; margin:auto; text-align:center;" />


        <td><button data-action="@Url.Action("ChequeAmountConfirm")" class="normal-submit btn btn-default" disabled>Confirm</button></td>
        if (ViewBag.TaskRole == "ChequeAmountEntry")
        {

            <div class="form-group">
                <button style="color:red" type="button" id="rejectBtn" class="btn btn-default normal-submit-confirm-action" disabled data-action="@Url.Action("ChequeAmountReject")">@Locale.RejectBtn</button>
            </div>
        }
        if (ViewBag.TaskRole == "ChequeAccountEntry")
        {
            <div class="form-group">
                <button style="color:red" type="button" id="rejectBtn" class="btn btn-default normal-submit-confirm-action" disabled data-action="@Url.Action("ChequeAccountReject")">@Locale.RejectBtn</button>
            </div>
        }
    }
    else
    {
        if (ViewBag.OutwardItemViewModel.getField("fldreasoncode") == "403" || ViewBag.OutwardItemViewModel.getField("fldclreasoncode") == "420" || ViewBag.OutwardItemViewModel.getField("fldclearingstatus") != "0")
        {
            <input disabled type="text" class="cheque-input new_fldcheckdigit number-only @(ViewBag.OutwardItemViewModel.getField("fldoricheckdigit") == ""  ? "" : "txtRed")" name="new_fldcheckdigit" value="@ViewBag.OutwardItemViewModel.getField("fldcheckdigit")" maxlength="2" style="width: 45px; margin-left:14px; margin-right:auto;" />
            @*<input readonly type="text" class="cheque-input new_fldserial number-only @(ViewBag.OutwardItemViewModel.getField("fldoriserial") == "" ? "" : "txtRed")" name="new_fldserial" value="@ViewBag.OutwardItemViewModel.getField("fldserial")" maxlength="6" style="width: 100px; margin:auto;"/>*@
            @*<input readonly type="text" class="cheque-input new_fldbankcode number-only @(ViewBag.OutwardItemViewModel.getField("fldoribankcode") == ""  ? "" : "txtRed")" name="new_fldbankcode" value="@ViewBag.OutwardItemViewModel.getField("fldbankcode")" maxlength="2"style="width: 45px; margin:auto;"/>*@
            @*<input readonly type="text" class="cheque-input new_fldbranchcode number-only @(ViewBag.OutwardItemViewModel.getField("fldoribranchcode") == ""  ? "" : "txtRed")" name="new_fldbranchcode" value="@ViewBag.OutwardItemViewModel.getField("fldbranchcode")" maxlength="3"style="width: 60px; margin:auto;"/>*@
            <input disabled type="text" class="cheque-input new_fldtype number-only @(ViewBag.OutwardItemViewModel.getField("fldoritype") == ""  ? "" : "txtRed")" name="new_fldtype" value="@ViewBag.OutwardItemViewModel.getField("fldtype")" maxlength="1" style="width: 30px; margin:auto; text-align:center;" />
            <input disabled type="text" class="cheque-input new_fldstatecode number-only @(ViewBag.OutwardItemViewModel.getField("fldoristatecode") == ""  ? "" : "txtRed")" name="new_fldstatecode" value="@ViewBag.OutwardItemViewModel.getField("fldstatecode")" maxlength="1" style="width: 30px; margin:auto;" />
            @*<input readonly type="text" class="cheque-input new_fldissueraccno number-only @(ViewBag.OutwardItemViewModel.getField("fldoriissueraccno") == ""  ? "" : "txtRed")" name="new_fldissueraccNo" value="@ViewBag.OutwardItemViewModel.getField("fldissueraccno")" maxlength="10" style="width: 150px; margin:auto;" />*@
            <input hidden type="text" class="cheque-input new_fldtccode number-only @(ViewBag.OutwardItemViewModel.getField("fldoritccode") == ""  ? "" : "txtRed")" name="new_fldtccode" value="@ViewBag.OutwardItemViewModel.getField("fldtccode")" maxlength="2" style="width: 45px; margin-left:auto; margin-right:200px;" />

            <input hidden disabled type="text" class="cheque-input new_fldlocation number-only @(ViewBag.OutwardItemViewModel.getField("fldorilocation") == ""  ? "" : "txtRed")" name="new_fldlocation" value="@ViewBag.OutwardItemViewModel.getField("fldlocation")" maxlength="1" style="width: 30px; margin:auto; text-align:center;" />
            <input disabled type="text" class="cheque-input new_fldbankcode number-only @(ViewBag.OutwardItemViewModel.getField("fldoribankcode") == ""  ? "" : "txtRed")" name="new_fldbankcode" value="@ViewBag.OutwardItemViewModel.getField("fldbankcode")" maxlength="3" style="width: 40px; margin:auto; text-align:center;" />
            <input disabled type="text" class="cheque-input new_fldbranchcode number-only @(ViewBag.OutwardItemViewModel.getField("fldoribranchcode") == ""  ? "" : "txtRed")" name="new_fldbranchcode" value="@ViewBag.OutwardItemViewModel.getField("fldbranchcode")" maxlength="4" style="width: 50px; margin:auto; text-align:center;" />
            <input disabled type="text" class="cheque-input new_fldserial number-only @(ViewBag.OutwardItemViewModel.getField("fldoriserial") == "" ? "" : "txtRed")" name="new_fldserial" value="@ViewBag.OutwardItemViewModel.getField("fldserial")" maxlength="6" style="width: 70px; margin:auto; text-align:center;" />
            <input disabled type="text" class="cheque-input new_fldissueraccno number-only @(ViewBag.OutwardItemViewModel.getField("fldoriissueraccno") == ""  ? "" : "txtRed")" name="new_fldissueraccNo" value="@ViewBag.OutwardItemViewModel.getField("fldissueraccno")" maxlength="20" style="width: 200px; margin:auto; text-align:center;" />
            <input readonly disabled type="text" class="cheque-input new_fldamount number-only @(ViewBag.OutwardItemViewModel.getField("fldamount") == ""  ? "" : "txtRed")" name="new_fldamount" @*value="@ViewBag.OutwardItemViewModel.getField("fldamount")"*@ value=@Html.Raw(String.Format("{0:N}",Convert.ToDecimal(@ViewBag.OutwardItemViewModel.getField("fldamount")))) maxlength="20" style="width: 150px; margin:auto; text-align:center;" />


            <td>
                <button data-action="@Url.Action("ChequeAmountConfirm")" class="normal-submit btn btn-default" disabled>Confirm</button>
                <button style="color:red" data-action="@Url.Action("ChequeAmountConfirm")" class="normal-submit btn btn-default" disabled>Reject</button>
            </td>

    }
    else
    {
        <input type="text" class="cheque-input new_fldcheckdigit number-only @(ViewBag.OutwardItemViewModel.getField("fldoricheckdigit") == ""  ? "" : "txtRed")" name="new_fldcheckdigit" value="@ViewBag.OutwardItemViewModel.getField("fldcheckdigit")" maxlength="2" style="width: 45px; margin-left:14px; margin-right:auto;" />
        @*<input type="text" class="cheque-input new_fldserial number-only @(ViewBag.OutwardItemViewModel.getField("fldoriserial") == "" ? "" : "txtRed")" name="new_fldserial" value="@ViewBag.OutwardItemViewModel.getField("fldserial")" maxlength="6" style="width: 100px; margin:auto;"/>*@
        @*<input type="text" class="cheque-input new_fldbankcode number-only @(ViewBag.OutwardItemViewModel.getField("fldoribankcode") == ""  ? "" : "txtRed")" name="new_fldbankcode" value="@ViewBag.OutwardItemViewModel.getField("fldbankcode")" maxlength="2"style="width: 45px; margin:auto;"/>*@
        @*<input type="text" class="cheque-input new_fldbranchcode number-only @(ViewBag.OutwardItemViewModel.getField("fldoribranchcode") == ""  ? "" : "txtRed")" name="new_fldbranchcode" value="@ViewBag.OutwardItemViewModel.getField("fldbranchcode")" maxlength="3"style="width: 60px; margin:auto;"/>*@
            <input type="text" class="cheque-input new_fldtype number-only @(ViewBag.OutwardItemViewModel.getField("fldoritype") == ""  ? "" : "txtRed")" name="new_fldtype" value="@ViewBag.OutwardItemViewModel.getField("fldtype")" maxlength="1" style="width: 30px; margin:auto; text-align:center;" />
        <input type="text" class="cheque-input new_fldstatecode number-only @(ViewBag.OutwardItemViewModel.getField("fldoristatecode") == ""  ? "" : "txtRed")" name="new_fldstatecode" value="@ViewBag.OutwardItemViewModel.getField("fldstatecode")" maxlength="1" style="width: 30px; margin:auto;" />
        @*<input type="text" class="cheque-input new_fldissueraccno number-only @(ViewBag.OutwardItemViewModel.getField("fldoriissueraccno") == ""  ? "" : "txtRed")" name="new_fldissueraccNo" value="@ViewBag.OutwardItemViewModel.getField("fldissueraccno")" maxlength="10" style="width: 150px; margin:auto;" />*@
        <input hidden type="text" class="cheque-input new_fldtccode number-only @(ViewBag.OutwardItemViewModel.getField("fldoritccode") == ""  ? "" : "txtRed")" name="new_fldtccode" value="@ViewBag.OutwardItemViewModel.getField("fldtccode")" maxlength="2" style="width: 45px; margin-left:auto; margin-right:200px;" />
        <input hidden type="text" class="cheque-input new_fldlocation number-only @(ViewBag.OutwardItemViewModel.getField("fldorilocation") == ""  ? "" : "txtRed")" name="new_fldlocation" value="@ViewBag.OutwardItemViewModel.getField("fldlocation")" maxlength="1" style="width: 30px; margin:auto; text-align:center;" />
        <input type="text" class="cheque-input new_fldbankcode number-only @(ViewBag.OutwardItemViewModel.getField("fldoribankcode") == ""  ? "" : "txtRed")" name="new_fldbankcode" value="@ViewBag.OutwardItemViewModel.getField("fldbankcode")" maxlength="3" style="width: 40px; margin:auto; text-align:center;" />
        <input type="text" class="cheque-input new_fldbranchcode number-only @(ViewBag.OutwardItemViewModel.getField("fldoribranchcode") == ""  ? "" : "txtRed")" name="new_fldbranchcode" value="@ViewBag.OutwardItemViewModel.getField("fldbranchcode")" maxlength="4" style="width: 50px; margin:auto; text-align:center;" />
        <input type="text" class="cheque-input new_fldserial number-only @(ViewBag.OutwardItemViewModel.getField("fldoriserial") == "" ? "" : "txtRed")" name="new_fldserial" value="@ViewBag.OutwardItemViewModel.getField("fldserial")" maxlength="6" style="width: 70px; margin:auto; text-align:center;" />
        <input type="text" class="cheque-input new_fldissueraccno number-only @(ViewBag.OutwardItemViewModel.getField("fldoriissueraccno") == ""  ? "" : "txtRed")" name="new_fldissueraccNo" value="@ViewBag.OutwardItemViewModel.getField("fldissueraccno")" maxlength="20" style="width: 200px; margin:auto; text-align:center;" />
        @*@Html.Raw(String.Format("{0:N}", @ViewBag.OutwardItemViewModel.getField("fldamount")))*@ @*@(((decimal)ViewBag.CalculatePrice).ToString("C2"))*@
            <input readonly disabled type="text" class="cheque-input new_fldamount @(ViewBag.OutwardItemViewModel.getField("fldamount") == ""  ? "" : "txtRed")" name="new_fldamount" value=@Html.Raw(String.Format("{0:N}",Convert.ToDecimal(@ViewBag.OutwardItemViewModel.getField("fldamount")))) @*value="@ViewBag.OutwardItemViewModel.getField("fldamount")"*@ @*onkeyup="this.value=addCommas(this.value);"*@ maxlength="20" style="width: 150px; margin:auto; text-align:center;" />

            <div class="form-group">

                @*<td><button  class="btn btn-default normal-submit-confirm-action" data-action="@Url.Action("ChequeAmountConfirm")">Confirm</button></td>*@
                <td><button class="btn btn-default normal-submit-confirm-action" data-action="@Url.Action("ChequeAmountConfirm")">Confirm</button></td>

            </div>

            if (ViewBag.TaskRole == "ChequeAmountEntry")
            {
                <div class="form-group">
                    <button style="color:red" type="button" id="rejectBtn" class="btn btn-default normal-submit-confirm-action" data-action="@Url.Action("ChequeAmountReject")">@Locale.RejectBtn</button>
                </div>
            }
            if (ViewBag.TaskRole == "ChequeAccountEntry")
            {
                <div class="form-group">
                    <button style="color:red" type="button" id="rejectBtn" class="btn btn-default normal-submit-confirm-action" data-action="@Url.Action("ChequeAccountReject")">@Locale.RejectBtn</button>
                </div>
            }
    }
    }


}
<div class="row">
    <div class="col-sm-8" style="position: relative; left: 12px;">
        <span class="bold">@Locale.Remarks</span><br />
        <textarea class="remarks" name="textAreaRemarks" maxlength="100"></textarea>
    </div>
</div>

