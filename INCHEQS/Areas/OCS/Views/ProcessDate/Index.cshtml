@using INCHEQS.Resources
@using (Html.BeginForm("SaveCreate", "ProcessDate", FormMethod.Post, new { @Class = "secure-form" }))
{
    @Html.AntiForgeryToken();
    <h4>Utilities - Process Date</h4>
    <div class="row">
        <hr />
        @*@Html.Partial("SearchPage/_GenericFieldsForm")*@
    </div>
    <hr />
    @*<div class="form-group">
            <button type="submit" class="btn btn-default" data-action="@Url.Action("SearchResultPage")">@Locale.Search</button>
        </div>*@
    <div>
        <input type="text" readonly="readonly" name="currentDate" value="@Convert.ToDateTime(ViewBag.CurrentDate).ToString("dd-MMMM-yyyy")">@*@ViewBag.CurrentDate*@
        <br />
        <input type="text" readonly="readonly" name="processDate" value="@Convert.ToDateTime(ViewBag.ProcessDate).ToString("dd-MMMM-yyyy")">@*@ViewBag.ProcessDate*@
        <button type="submit" id="Confirm" name="Confirm" formaction='@Url.Action("SaveCreate", "ProcessDateContoller")'>Confirm</button>
    </div>
    <br />
    <div id="my-calendar"></div>
    @*<div id="resultContainer"></div>*@

}

@*<script type="application/javascript">
        function drawSignatureRulesTable(accountNo, $holder) {
                //Call ajax and draw table
                //Return JSON
                $.ajax({
                    cache: false,
                    type: "POST",
                    url: App.ContextPath + "Signature/RulesList",
                    data: "accountNo=" + accountNo,
                    beforeSend: function () {
                        $('.rules-loader').removeClass("hidden")
                    },
                    success: function (data) {
                        $('.rules-loader').addClass("hidden")
                        //Draw Rules using template
                        $holder.append(_.template(signatureRulesTemplate)({ data: data }));
                        //Trigger validation on change
                        $("#signatureGallery input[type=checkbox]").on("change", function (e) {
                            signatureValidateSubmit();
                        })
                    }
                });
            }

            var signatureRulesTemplate = [

                    "<tr>",
                         "<td><%=i.accountName%></td>",
                        "<td><%=i.accountType%></td>",
                        "<td><%=i.accountStatus%></td>",
                        "<td><%=i.condition%></td>",
                         "<td><%=i.ProductTypeCode%></td>",
                        "<td><%=i.AccEffective%> to <%=i.AccExpiry%></td>",
                    "</tr>",
                "<% }) %>"
            ].join("\n");
    </script>*@
<script type="application/javascript">

            $(document).ready(function () {
                $("#my-calendar").zabuto_calendar({
                    language: "en",
                    cell_border: true,
                    today: true
            });

            });

</script>
@Scripts.Render("~/bundles/calendar")
@Styles.Render("~/Content/calendar")
