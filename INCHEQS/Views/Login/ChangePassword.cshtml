@using INCHEQS.ViewModels
@using INCHEQS.Resources
@model LoginViewModel
@{
    ViewData["Title"] = "IHCHEQS - Change Password";
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}

@using (Html.BeginForm("UpdatePassword", "Login", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @Class = "form-horizontal", role = "form" })) {
    @Html.AntiForgeryToken();
    <text>
        <hr />
        @Html.ValidationSummary(true, "", new { @Class = "text-danger" })
        <p>
            @Html.HiddenFor(m => m.UserId)
        </p>
        <p>
            @Html.LabelFor(m => m.UserAbbr)
            <br />@Html.TextBoxFor(m => m.UserAbbr)
            @Html.ValidationMessageFor(m => m.UserAbbr, "", new { @Class = "text-danger", required = "true" })
        </p>
        <p>
            @Html.LabelFor(m => m.OldPassword)
            <br />@Html.TextBoxFor(m => m.OldPassword)
            @Html.ValidationMessageFor(m => m.OldPassword, "", new { @Class = "text-danger" , autocomplete = "off" , required = "true" })
        </p>
        <p>
            @Html.LabelFor(m => m.NewPassword)
            <br />@Html.TextBoxFor(m => m.NewPassword)
            @Html.ValidationMessageFor(m => m.NewPassword, "", new { @Class = "text-danger" , autocomplete = "off", required = "true" })
        </p>
        <p>
            @Html.LabelFor(m => m.ConfirmNewPassword)
            <br />@Html.TextBoxFor(m => m.ConfirmNewPassword)
            @Html.ValidationMessageFor(m => m.ConfirmNewPassword, "", new { @Class = "text-danger" , autocomplete = "off", required = "true" })
        </p>
        <p><button type="submit" class="btn btn-default">@Locale.UpdatePassword</button></p>
    </text>
}
<script src="~/Scripts/App/login.js"></script>