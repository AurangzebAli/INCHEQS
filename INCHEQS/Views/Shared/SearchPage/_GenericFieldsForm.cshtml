@using INCHEQS.Resources
@foreach (var field in ViewBag.SearchPage.FormFields) {

    if ("DateFromTo".Equals(field.fieldType)) {
        <div class="form-group col-sm-2 isFilter">
            <label class="txtBlack" for="@field.fieldId">@field.fieldLabel (FROM)</label>
            <input type="text" class="form-control @(field.isReadOnly == "Y"? "" : "date-start") txtBlack" name="from_@field.fieldId" value="@field.fieldDefaultValue" readonly />
        </div>

        <div class="form-group col-sm-2">
            <label class="txtBlack" for="@field.fieldId">@field.fieldLabel (TO)</label>
            <input type="text" class="form-control @(field.isReadOnly == "Y"? "" : "date-end") txtBlack" name="to_@field.fieldId" value="@field.fieldDefaultValue" readonly />
        </div>
    } else {
<div class="form-group col-sm-2 ">
    <label class="txtBlack" for="@field.fieldId">@field.fieldLabel</label>

    @if ("TextBox".Equals(field.fieldType))
    {
        if (@field.fieldId == "fldTransCodeDesc")
        {
            <input type="text" class="form-control txtBlack isFilter" maxlength="@field.length" style="width:350px;" name="@field.fieldId" value="@field.fieldDefaultValue" @(field.isReadOnly == "Y" ? "readonly" : "") />
        }
        else
        {
            <input type="text" class="form-control txtBlack isFilter" maxlength="@field.length" name="@field.fieldId" value="@field.fieldDefaultValue" @(field.isReadOnly == "Y" ? "readonly" : "") />
        }
    }
    @if ("NumberBox".Equals(field.fieldType))
    {
        <input type="text" class="form-control number-only txtBlack isFilter" maxlength="@field.length" name="@field.fieldId" value="@field.fieldDefaultValue" @(field.isReadOnly == "Y" ? "readonly" : "") />
    }
    @if ("Currency".Equals(field.fieldType))
    {
        <input type="text" class="form-control number-only floatnumber txtBlack isFilter" style="text-align:right" maxlength="@field.length" name="@field.fieldId" value="@field.fieldDefaultValue" @(field.isReadOnly == "Y" ? "readonly" : "") />
    }

    @if ("SelectList".Equals(field.fieldType))
    {
        <select class="form-control txtBlack isFilter" name="@field.fieldId">
            @if (field.keyValueFieldList != null)
            {
                foreach (var pair in field.keyValueFieldList)
                {
                    <option value="@pair.value.Trim()" @(field.fieldDefaultValue == pair.value ? "selected" : "")>@pair.text</option>
                }
            }
        </select>
    }
    @if ("SelectListWithAll".Equals(field.fieldType))
    {

        if ("fldIssueBankCode".Equals(@field.fieldId) || "fldissuebankcode".Equals(@field.fieldId))
        {
            <select class="form-control txtBlack isFilter" id="fldIssueBankCode" name="@field.fieldId">
                <option value="">@Locale.ALL</option>
                @if (field.keyValueFieldList != null)
                {
                    foreach (var pair in field.keyValueFieldList)
                    {
                        <option value="@pair.value.Trim()" @(field.fieldDefaultValue == pair.value ? "selected" : "")>@pair.text</option>
                    }
                }
            </select>
        }
        else if ("fldIssueBankBranch".Equals(@field.fieldId))
        {
            <select class="form-control txtBlack isFilter" id="fldIssueBankBranch" name="@field.fieldId">
                <option value="">@Locale.ALL</option>
                @if (field.keyValueFieldList != null)
                {
                    foreach (var pair in field.keyValueFieldList)
                    {
                        <option value="@pair.value.Trim()" @(field.fieldDefaultValue == pair.value ? "selected" : "")>@pair.text</option>
                    }
                }
            </select>
        }
        else if ("fileTypeName".Equals(@field.fieldId))
        {
            <select class="form-control txtBlack isFilter" id="fileTypeName" name="@field.fieldId">

                @if (field.keyValueFieldList != null)
                {
                    foreach (var pair in field.keyValueFieldList)
                    {
                        <option value="@pair.value.Trim()" @(field.fieldDefaultValue == pair.value ? "selected" : "")>@pair.text</option>
                    }
                }
            </select>
        }
        else if ("fldClearingType".Equals(@field.fieldId))
        {
            <select class="form-control txtBlack isFilter" id="fldClearingType" name="@field.fieldId">

                @if (field.keyValueFieldList != null)
                {
                    foreach (var pair in field.keyValueFieldList)
                    {
                        <option value="@pair.value.Trim()" @(field.fieldDefaultValue == pair.value ? "selected" : "")>@pair.text</option>
                    }
                }
            </select>
        }


        else
        {
            <select class="form-control txtBlack isFilter" name="@field.fieldId">
                <option value="">@Locale.ALL</option>
                @if (field.keyValueFieldList != null)
                {
                    foreach (var pair in field.keyValueFieldList)
                    {
                        <option value="@pair.value.Trim()" @(field.fieldDefaultValue == pair.value ? "selected" : "")>@pair.text</option>
                    }
                }
            </select>
        }
    }
    @if ("Date".Equals(field.fieldType))
    {
        <input type="text" class="form-control @(field.isReadOnly == "Y"? "" : "form-date") txtBlack isFilter" name="@field.fieldId" value="@field.fieldDefaultValue" readonly />
    }
    @if ("DateBranchEODSummary".Equals(field.fieldType))
    {
        <input type="text" class="form-control @(field.isReadOnly == "Y"? "" : "form-date") txtBlack isFilter" name="@field.fieldId" value="@field.fieldDefaultValue" readonly />
    }

</div>
    }
}
<script type="text/javascript">
   
    $(document).ready(function () {
        $(".floatnumber").change(function () {
            if ($(this).val() != "") {
                var value = parseFloat($(this).val()).toFixed(2)
                var parts = value.toString().split(".");
                parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                //parts.join(".")
                $(this).val(parts.join("."));
                //$(this).val(parseFloat($(this).val()).toFixed(2));
            } else
            {
                $(this).val("");
            }
        });
    });

</script>